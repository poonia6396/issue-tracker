---
name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  build-deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

    - name: Build Backend Docker image
      run: |
        docker buildx build --platform linux/amd64 -t registry.heroku.com/issue_tracker_backend/web -f ./issue_tracker/Dockerfile ./issue_tracker --push

    - name: Push Docker image to Heroku Container Registry
      run: docker push registry.heroku.com/your-app-name/web

    - name: Release Docker image to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku container:release web --app issue_tracker_backend

  build-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

    - name: Build and Push Frontend Docker image
      run: |
        docker buildx build --platform linux/amd64 -t registry.heroku.com/issue_tracker_frontend/web -f ./issue_tracker_frontend/Dockerfile ./issue_tracker_frontend
        docker push registry.heroku.com/issue_tracker_frontend/web

    - name: Release Frontend
      run: |
        heroku container:release web --app issue_tracker_frontend
