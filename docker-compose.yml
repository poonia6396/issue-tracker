version: "3.8"

services:
  issue_tracker:
    build:
      context: ./issue_tracker
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./issue_tracker:/issue_tracker
    env_file:
      - .env
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:16-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./issue_tracker_frontend
    volumes:
      - react_build:/app/build
    depends_on:
      - issue_tracker
    healthcheck:
      test: ["CMD", "ls", "/app/build"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - react_build:/var/www/react
    depends_on:
      - issue_tracker
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  dev-db-data:
  react_build:
